# Powered by Application Builder: https://github.com/golift/application-builder
jobs:
  include:
  - os: osx
    osx_image: xcode12
    language: go
    go: 1.16.x
  - os: linux
    dist: bionic
    services: docker
    language: go
    go: 1.16.x
git:
  depth: false
addons:
  homebrew:
    packages:
    - upx
  apt:
    packages:
    - ruby-dev
    - rpm
    - build-essential
    - git
    - libgnome-keyring-dev
    - fakeroot
    - zip
    - debsigs
    - gnupg
    - expect
    - upx
install:
  - mkdir -p $(go env GOPATH)/bin
  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin latest
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then rvm install 2.6.0; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then rvm 2.6.0 do gem install --no-document fpm; fi
before_script:
  # Create your own deploy key, tar it, and encrypt the file to make this work. Optionally add a bitly_token file to the archive.
  - openssl aes-256-cbc -K $encrypted_772fc4772f04_key -iv $encrypted_772fc4772f04_iv -in .secret_files.tar.enc -out .secret_files.tar -d
  - tar -xf .secret_files.tar
  - gpg --import gpg.signing.key
  - rm -f gpg.signing.key .secret_files.tar
  - source settings.sh
script:
  # Test Go and Docker.
  - make test
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then make docker; fi
  # Test built docker image.
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then docker run $BINARY -v 2>&1 | grep -Eq "^$BINARY,? v.*$VERSION"; fi
  # Build everything
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then rvm 2.6.0 do make release; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ];   then make dmg; fi
after_success:
  # Display Release Folder
  - ls -l release/
  # Setup the ssh client so we can clone and push to the homebrew formula repo.
  # You must put github_deploy_file into .secret_files.tar.enc
  # This is an ssh key added to your homebrew forumla repo.
  - |
    mkdir -p $HOME/.ssh
    declare -r SSH_FILE="$(mktemp -u $HOME/.ssh/XXXXX)"
    echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> $HOME/.ssh/config
    [ ! -f github_deploy_key ] || (mv github_deploy_key $SSH_FILE \
      && chmod 600 "$SSH_FILE" \
      && printf "%s\n" \
        "Host github.com" \
        "  IdentityFile $SSH_FILE" \
        "  StrictHostKeyChecking no" \
        "  LogLevel ERROR" >> $HOME/.ssh/config)
deploy:
  - provider: packagecloud
    repository: "pkgs"
    username: "golift"
    token:
      secure: "Yaz7+CBCo6eBE5Kr8ZdGwUL6KjiHiN0JuCQkaH45AYpP5VpnV1WL/vpJT8oaHPulzGN41UbsmOfSnY5QUyxowMcIIoL/ETU6t7ZO8gwi90AfMT5GPZCa5s8A63js1+AQodet2vp4CqSV0q+MamgZ9enZTm0MSJlnwBhulOeeVobYhIatqWXhv7u4+qr+VRIs6+YcKP2JYm19MJykyVxdQpvaKpZSDQQx7Bnf2IF2DoaZB10hGoBcDGIoqDVU1S1rx7WGrlL/XdrcKaKYK/Z8wMYo56pSMQXmqPAhnwzVv+tj2GGuHf/4T6VvcV//r+4iiUSyMoYmJWQwfYftTDOImhkeD9fKDRn5ew6D2eq8ybvnSuYVmgg/agvYBW5Tmm2k8/NkhNviQyaPDOeISlpdbxR+JJWbPrw6kD5Y0GF7Uyi3iv13iPDeoYoRnL3zl/D3PBdD+PE8RUrxWsxN47PRHA4Q5ZzvCMJ3Q1JeX639hKBAX+LVDDKoRpK+pwd1GohF1x4H2OBQnZYDh4fqvuxMyZALAtT+KRSpP7YA8uWDQlgIkGxN1bcr4XK/JXtX9z/sbudD+CFGJpUjTXQ4pUe3ObfoE26w8rNb9lN81fX/NkKxXbKWWM+10KJApXFS8b40WpiZDjjXD48bbV88SkRx9PWZtqJlKyI21nLRhmnhbhk="
    dist: "ubuntu/focal"
    local-dir: release
    package_glob: "*.deb"
    skip_cleanup: true
    cleanup: false
    on:
      tags: true
      condition: "$TRAVIS_OS_NAME = linux"
  - provider: packagecloud
    repository: "pkgs"
    username: "golift"
    token:
      secure: "Yaz7+CBCo6eBE5Kr8ZdGwUL6KjiHiN0JuCQkaH45AYpP5VpnV1WL/vpJT8oaHPulzGN41UbsmOfSnY5QUyxowMcIIoL/ETU6t7ZO8gwi90AfMT5GPZCa5s8A63js1+AQodet2vp4CqSV0q+MamgZ9enZTm0MSJlnwBhulOeeVobYhIatqWXhv7u4+qr+VRIs6+YcKP2JYm19MJykyVxdQpvaKpZSDQQx7Bnf2IF2DoaZB10hGoBcDGIoqDVU1S1rx7WGrlL/XdrcKaKYK/Z8wMYo56pSMQXmqPAhnwzVv+tj2GGuHf/4T6VvcV//r+4iiUSyMoYmJWQwfYftTDOImhkeD9fKDRn5ew6D2eq8ybvnSuYVmgg/agvYBW5Tmm2k8/NkhNviQyaPDOeISlpdbxR+JJWbPrw6kD5Y0GF7Uyi3iv13iPDeoYoRnL3zl/D3PBdD+PE8RUrxWsxN47PRHA4Q5ZzvCMJ3Q1JeX639hKBAX+LVDDKoRpK+pwd1GohF1x4H2OBQnZYDh4fqvuxMyZALAtT+KRSpP7YA8uWDQlgIkGxN1bcr4XK/JXtX9z/sbudD+CFGJpUjTXQ4pUe3ObfoE26w8rNb9lN81fX/NkKxXbKWWM+10KJApXFS8b40WpiZDjjXD48bbV88SkRx9PWZtqJlKyI21nLRhmnhbhk="
    dist: "el/6"
    local-dir: release
    package_glob: "*.rpm"
    skip_cleanup: true
    cleanup: false
    on:
      tags: true
      condition: "$TRAVIS_OS_NAME = linux"
  - provider: releases
    token:
      # to get a secure api key, run: travis setup releases
      # make a copy of this file first because that command will change it.
      # or: make a new key manually at https://github.com/settings/tokens/new
      # then: echo <NEW_KEY_FROM_GH> | travis encrypt
      secure: "ss7VYWtUf3VWDsWbDVWZCIq7cOJZ7G2w3rlIB95Du0xjH2lKX3j3pz8nVVRwa549X1oXrdL59ruixnhn1Oj/qaItB2DoAyS/F1xUjKDriTX2m31QHdMppeVTP4ajVrGEhoqfNXMHp53tbCtwZEg09yYryM6Y53tcznTWrxqmBWejC7oXNSbFatLwGTaVPQT4dB1sB72dQcqhZaWeQHI9tqM5rOtyT9hpx1JTp6twUTfI0u2gz/T3Yyz3ZU2LyQUWv6vabN1VeRTTvSv+yEmB3KUwk0bz765sECeuHVwi/S0DNhM+6h9F1AziISAtNuXBzhxy5uyqBKw6kIZQUHSpKZdMogUdgp9Sbs4vmO7nVcmA0NYL0ggGxlKio8ZqRyXIyWx5+BpkBICT7RzU4Zc1HsIGcuEPazF1nuA3HLIAyPFdM8NB2ttxL4xAue5RdaGONyLizQZTCo/9XX00LtaytpPki9eYWIAZPf9ta2Ngg3k72FLXEfwYJ/annaJr7Gp+YnFKMbcwJNPB2zQrUXIu2b2i9eLdVGE/U6PVZAGkP30y0q9FCc+S4VieqMWP0yd/oJ/0i8HXjd7HRjYkT4XmhvLloLToM5adcgKpg03cJL9x6eVGtX+dENtecD3tBEGHdM6Qx94mSOt0qffgMuKC7B7TvzR8a71mYZo1PwPmt3E="
    overwrite: true
    skip_cleanup: true
    cleanup: false
    file_glob: true
    file: release/*
    on:
      tags: true
  - provider: script
    script: scripts/formula-deploy.sh
    on:
      tags: true
